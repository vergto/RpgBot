import telebot
import sqlite3
import bmenu
from rand_nps import *
from get_text_messages import *

# –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
users = sqlite3.connect("users.db")
with users:
    cur = users.cursor()
    cur.execute("DROP TABLE IF EXISTS Users")
    cur.execute("CREATE TABLE Users(Id INT, UserName TEXT, Strength INT, intellect INT, Agility INT, "
                "Stamina INT, Luck INT, Gold INT, LVL INT, LVL_OP INT, LVL_NEED_OP INT, HP INT, DMG INT, MAP INT)")
cur.close()

# git add .
# git commit -m "first commit"
# git push -u origin master

bot = telebot.TeleBot('952476420:AAHOxzyLhPslDRyRMaxGY2YTZN-ZlGrpwIU')


# –°–æ–∑–¥–∞–Ω–∏–µ –ë–î —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ
def hello(message):
    users = sqlite3.connect("users.db")
    name = message.from_user.first_name
    with users:
        cur = users.cursor()
        cur.execute("""INSERT INTO Users VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?);""",
                    (str(message.from_user.id), str(name), str('5'), str('5'), str('5'), str('5'), str('5'),
                     str('1000'), str('1'), str('0'), str('100'), str('100'), str('10'), str('0')))
    cur.close()


# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –≤—ã–≤–æ–¥ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
@bot.message_handler(commands=['start'])
def start_message(message):
    start = telebot.types.ReplyKeyboardMarkup(True, False)
    itembtna = telebot.types.KeyboardButton('–ë–æ–π ‚öî')
    itembtnb = telebot.types.KeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å üé´')
    itembtnd = telebot.types.KeyboardButton('–ü—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å')
    itembtne = telebot.types.KeyboardButton('–ü—Ä–æ–∫–∞—á–∞—Ç—å üèÖ')
    start.row(itembtna, itembtnb)
    start.row(itembtnd, itembtne)
    bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=start)
    users = sqlite3.connect("users.db")
    with users:
        cur = users.cursor()
        cur.execute("SELECT * FROM Users WHERE Id=" + str(message.from_user.id))
        rows = cur.fetchall()
    cur.close()
    if not rows:
        bot.callback_query_handler(hello(message))


# –í—ã–≤–æ–¥ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö –¥–∞–Ω–Ω—ã—Ö
def users_list(message):
    users = sqlite3.connect("users.db")
    with users:
        cur = users.cursor()
        cur.execute("SELECT * FROM Users")
        rows = cur.fetchall()
        for row in rows:
            bot.send_message(message.from_user.id, str(row))


# –ö–Ω–æ–ø–∫–∏ –ø—Ä–µ–¥–ª–∞–≥–∞—é—â–∏–µ –Ω–∞ –≤—ã–±–æ—Ä –æ–¥–Ω—É –∏–∑ –ø—Ä–æ–∫–∞—á–∏–≤–∞–µ–º—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
def users_up_stats(message):
    users = sqlite3.connect("users.db")
    with users:
        cur = users.cursor()
        cur.execute("SELECT * FROM Users WHERE Id=" + str(message.from_user.id))
        rows = cur.fetchall()
        cur.close()
    if not rows:
        bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, –≤–∏–∂—É —Ç—ã –∑–¥–µ—Å—å –≤–ø–µ—Ä–≤—ã–µ, –Ω–∞–∂–º–∏ /start")
    else:
        up_stats = telebot.types.ReplyKeyboardMarkup(True, False)
        itembtna = telebot.types.KeyboardButton('üí™ –°–∏–ª–∞')
        itembtnb = telebot.types.KeyboardButton('üìö –ò–Ω—Ç–µ–ª–µ–∫—Ç')
        itembtnc = telebot.types.KeyboardButton('ü§∏ ‚Äç–õ–æ–≤–∫–æ—Å—Ç—å')
        itembtnd = telebot.types.KeyboardButton('üßò ‚Äç–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å')
        itembtne = telebot.types.KeyboardButton('üéØ –£–¥–∞—á–∞')
        itembtnf = telebot.types.KeyboardButton('–ù–∞–∑–∞–¥')
        up_stats.row(itembtna, itembtnb, itembtnc)
        up_stats.row(itembtnd, itembtne, itembtnf)
        bot.send_message(message.from_user.id, "–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–∫–∞—á–∫–∏: " + str(100 * rows[0][8]) + "üí∞")
        bot.send_message(message.from_user.id, "–ß—Ç–æ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–æ–∫–∞—á–∞—Ç—å " + str(rows[0][1]) + "?\n",
                         reply_markup=up_stats)


# –§—É–Ω–∫—Ü–∏—è –ø–æ–≤—ã—à–µ–Ω–∏—è –æ–Ω–Ω–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
def users_up_stats_inc(message):
    users = sqlite3.connect("users.db")
    with users:
        cur = users.cursor()
        cur.execute("SELECT * FROM Users WHERE Id=" + str(message.from_user.id))
        rows = cur.fetchall()
        type_stat = ""
        price_stats_inc = 100 * rows[0][8]
        if rows[0][7] >= price_stats_inc:
            if message.text == "üí™ –°–∏–ª–∞" or message.text == "–°–∏–ª–∞":
                type_stat = "Strength"
            elif message.text == "üìö –ò–Ω—Ç–µ–ª–µ–∫—Ç" or message.text == "–ò–Ω—Ç–µ–ª–µ–∫—Ç":
                type_stat = "intellect"
            elif message.text == "ü§∏ ‚Äç–õ–æ–≤–∫–æ—Å—Ç—å" or message.text == "‚Äç–õ–æ–≤–∫–æ—Å—Ç—å":
                type_stat = "Agility"
            elif message.text == "üßò ‚Äç–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å" or message.text == "‚Äç–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å":
                type_stat = "Stamina"
            elif message.text == "üéØ –£–¥–∞—á–∞" or message.text == "–£–¥–∞—á–∞":
                type_stat = "Luck"
        if type_stat != "" and rows[0][7] >= price_stats_inc:
            if type_stat == "Strength":
                cur.execute(
                    "UPDATE Users SET " + type_stat + "=" + type_stat + "+1 WHERE  Id=" + str(message.from_user.id))
                cur.execute(
                    "UPDATE Users SET Gold = Gold-" + str(price_stats_inc) + " WHERE  Id=" + str(message.from_user.id))
                cur.execute("UPDATE Users SET HP = HP+5 WHERE  Id=" + str(message.from_user.id))
                cur.execute("UPDATE Users SET DMG = DMG+2 WHERE  Id=" + str(message.from_user.id))
                bot.send_message(message.from_user.id, "–í—ã–±—Ä–∞–Ω–Ω–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –ø–æ–≤—ã—Å–∏–ª–∞—Å—å")
                bot.callback_query_handler(bmenu.rearwards(message))
            elif type_stat == "Stamina":
                cur.execute(
                    "UPDATE Users SET " + type_stat + "=" + type_stat + "+1 WHERE  Id=" + str(message.from_user.id))
                cur.execute(
                    "UPDATE Users SET Gold = Gold-" + str(price_stats_inc) + " WHERE  Id=" + str(message.from_user.id))
                cur.execute("UPDATE Users SET HP = HP+10 WHERE  Id=" + str(message.from_user.id))
                bot.send_message(message.from_user.id, "–í—ã–±—Ä–∞–Ω–Ω–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –ø–æ–≤—ã—Å–∏–ª–∞—Å—å")
                bot.callback_query_handler(bmenu.rearwards(message))
            elif type_stat == "Agility":
                cur.execute(
                    "UPDATE Users SET " + type_stat + "=" + type_stat + "+1 WHERE  Id=" + str(message.from_user.id))
                cur.execute(
                    "UPDATE Users SET Gold = Gold-" + str(price_stats_inc) + " WHERE  Id=" + str(message.from_user.id))
                cur.execute("UPDATE Users SET DMG = DMG+3 WHERE  Id=" + str(message.from_user.id))
                bot.send_message(message.from_user.id, "–í—ã–±—Ä–∞–Ω–Ω–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –ø–æ–≤—ã—Å–∏–ª–∞—Å—å")
                bot.callback_query_handler(bmenu.rearwards(message))
            elif type_stat == "Luck" or type_stat == "intellect":
                cur.execute(
                    "UPDATE Users SET " + type_stat + "=" + type_stat + "+1 WHERE  Id=" + str(message.from_user.id))
                cur.execute(
                    "UPDATE Users SET Gold = Gold-" + str(price_stats_inc) + " WHERE  Id=" + str(message.from_user.id))
                bot.send_message(message.from_user.id, "–í—ã–±—Ä–∞–Ω–Ω–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –ø–æ–≤—ã—Å–∏–ª–∞—Å—å")
                bot.callback_query_handler(bmenu.rearwards(message))
        else:
            bot.send_message(message.from_user.id, "–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ‚ùå–¥–µ–Ω–µ–≥‚ùå –¥–ª—è –ø—Ä–æ–∫–∞—á–∫–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏")
            bot.callback_query_handler(bmenu.rearwards(message))
    cur.close()


# –†–∞–Ω–¥–æ–º–Ω—ã–π –º–æ–Ω—Å—Ç—Ä –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ª–æ–∫–∞—Ü–∏–∏
# def rand_battle_monster(message):
#    users = sqlite3.connect("users.db")
#    with users:
#        cur = users.cursor()
#       cur.execute("SELECT * FROM Users WHERE Id=" + str(message.from_user.id))
#       rows = cur.fetchall()
#        R = Rand_monster(rows[0][13])
#  return R.get_rand_monster()


# –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
def lvl_up_hero(fight_logs_battle, monster_lvl, message):
    users = sqlite3.connect("users.db")
    with users:
        cur = users.cursor()
        cur.execute("SELECT * FROM Users WHERE Id=" + str(message.from_user.id))
        rows = cur.fetchall()
        experience_lvl = round((monster_lvl - rows[0][8] + 1) + (rows[0][10] / 100 * random.randint(3, 5)))
        fight_logs_battle = fight_logs_battle + "\n–ø–æ–ª—É—á–µ–Ω–æ –æ–ø—ã—Ç–∞: " + str(experience_lvl)
        cur.execute(
            "UPDATE Users SET LVL_OP = LVL_OP+" + str(experience_lvl) + " WHERE  Id=" + str(message.from_user.id))
        lvl_up_flag = 0
        if (rows[0][9] + experience_lvl) >= rows[0][10]:
            cur.execute(
                "UPDATE Users SET LVL_OP = LVL_OP-" + str(rows[0][10]) + " WHERE  Id=" + str(message.from_user.id))
            cur.execute("UPDATE Users SET LVL_NEED_OP = LVL_NEED_OP*4 WHERE  Id=" + str(message.from_user.id))
            cur.execute("UPDATE Users SET LVL = LVL+1 WHERE  Id=" + str(message.from_user.id))
            cur.execute("UPDATE Users SET HP = HP+20 WHERE  Id=" + str(message.from_user.id))
            cur.execute("UPDATE Users SET DMG = DMG+5 WHERE  Id=" + str(message.from_user.id))
            fight_logs_battle = fight_logs_battle + "\nüéäüéä–í–∞—à —É—Ä–æ–≤–µ–Ω—å –ø–æ–≤—ã—à–µ–Ωüéäüéä \n–ó–¥–æ—Ä–æ–≤—å–µ —É–≤–µ–ª–∏—á–µ–Ω–æ –Ω–∞ 20‚ù§ –∏ —É—Ä–æ–Ω " \
                                                    "—É–≤–µ–ª–∏—á–µ–Ω –Ω–∞ 5üî™ "
            fight_logs_battle = fight_logs_battle + "\n–í–∞—à —É—Ä–æ–≤–µ–Ω—å: " + str(rows[0][8] + 1) + "   " \
                                + str(rows[0][9] + experience_lvl - rows[0][10]) + "/" + str(rows[0][10] * 4)
            lvl_up_flag = 1
        if lvl_up_flag == 0:
            fight_logs_battle = fight_logs_battle + "\n–í–∞—à —É—Ä–æ–≤–µ–Ω—å: " + str(rows[0][8]) + "   " \
                                + str(rows[0][9] + experience_lvl) + "/" + str(rows[0][10])
        gold_plus = round(monster_lvl * random.randint(1, 15))
        cur.execute("UPDATE Users SET Gold = Gold+" + str(gold_plus) + " WHERE  Id=" + str(message.from_user.id))
        fight_logs_battle = fight_logs_battle + "\n–ø–æ–ª—É—á–µ–Ω–æ: " + str(rows[0][7]) + "+" + str(gold_plus) + " –∑–æ–ª–æ—Ç–∞üí∞"
        bot.send_message(message.from_user.id, fight_logs_battle)
    cur.close()


# –°–æ–∑–¥–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è –∏ HP –±–æ—Å—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ª–æ–∫–∞—Ü–∏–∏
def fight_battle_monster(fight_logs_battle, type_monster_battle, message):
    users = sqlite3.connect("users.db")
    with users:
        cur = users.cursor()
        cur.execute("SELECT * FROM Users WHERE Id=" + str(message.from_user.id))
        rows = cur.fetchall()
        cur.close()
    monster_lvl = round(rows[0][8] * random.randint(1, 3)) + rows[0][13]
    monster_hp = monster_lvl * random.randint(10, 20)
    if rows[0][13] == 7:
        monster_hp = monster_hp + 10000
    if rows[0][13] == 8:
        monster_hp = monster_hp + 20000
    hero_hp = rows[0][11]
    first_hit = round((rows[0][3] + rows[0][4] + rows[0][6]) / 3) - 1
    fight_logs_battle = fight_logs_battle + str(rows[0][1]) + ": " + str(hero_hp) + "‚ù§ / " + str(
        type_monster_battle) + " " \
                        + str(monster_lvl) + " —É—Ä–æ–≤–Ω—è: " + str(monster_hp) + "‚ù§ \n\n"
    if first_hit > monster_lvl:
        flagg = 1
        fight_logs_battle = fight_logs_battle + str(rows[0][1]) + " –ó–∞–º–µ—Ç–∏–ª –º–æ–Ω—Å—Ç—Ä–∞ –ø–µ—Ä–≤—ã–º\n"
    else:
        flagg = 0
        fight_logs_battle = fight_logs_battle + "–ì–µ—Ä–æ–π –Ω–µ –∑–∞–º–µ—Ç–∏–ª –ø–æ–¥–∫—Ä–∞–¥—ã–≤–∞—é—â–µ–≥–æ—Å—è –º–æ–Ω—Å—Ç—Ä–∞\n"
    while monster_hp >= 1 and hero_hp >= 1:
        hero_dmg = round(rows[0][12] * random.random() * 4)
        monster_dmg = round(50 + monster_lvl * random.random() * 4)
        if flagg == 1:
            flagg = 0
            monster_hp = monster_hp - hero_dmg
            fight_logs_battle = fight_logs_battle + str(rows[0][1]) + " ‚öî " + str(type_monster_battle) \
                                + " –Ω–∞–Ω–æ—Å—è " + str(hero_dmg) + " —É—Ä–æ–Ω–∞\n‚ù§ —É –º–æ–Ω—Å—Ç—Ä–∞ –æ—Å—Ç–∞–ª–æ—Å—å " + str(monster_hp) + "\n"
        elif flagg == 0:
            flagg = 1
            hero_hp = hero_hp - monster_dmg
            fight_logs_battle = fight_logs_battle + str(type_monster_battle) + " ‚öî –≥–µ—Ä–æ—è –Ω–∞–Ω–æ—Å—è " \
                                + str(monster_dmg) + " —É—Ä–æ–Ω–∞\n‚ù§ —É –≥–µ—Ä–æ—è –æ—Å—Ç–∞–ª–æ—Å—å " + str(hero_hp) + "\n"
    if monster_hp <= 0 and hero_hp >= 1:
        fight_logs_battle = fight_logs_battle + "\nüéä–ì–µ—Ä–æ–π –ø–æ–±–µ–¥–∏–ªüéä"
        lvl_up_hero(fight_logs_battle, monster_lvl, message)
    elif hero_hp <= 0 and monster_hp >= 1:
        fight_logs_battle = fight_logs_battle + "\n‚ò†–ì–µ—Ä–æ–π –ø—Ä–æ–∏–≥—Ä–∞–ª‚ò†"
        bot.send_message(message.from_user.id, fight_logs_battle)


# –ù–∞—á–∞–ª–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±–∏—Ç–≤—ã, –Ω–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ –ø–æ–¥–±–∏—Ä–∞–µ—Ç—Å—è –º–æ–Ω—Å—Ç—Ä –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —Å–ª–µ–¥. —Ñ—É–Ω–∫—Ü–∏–∏
def battle(message):
    users = sqlite3.connect("users.db")
    with users:
        cur = users.cursor()
        cur.execute("SELECT * FROM Users WHERE Id=" + str(message.from_user.id))
        rows = cur.fetchall()
        cur.close()
    if not rows:
        bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, –≤–∏–∂—É —Ç—ã –∑–¥–µ—Å—å –≤–ø–µ—Ä–≤—ã–µ, –Ω–∞–∂–º–∏ /start")
    else:
        R = Rand_monster(rows[0][13])
        type_monster_battle = R.get_rand_monster()
        fight_logs_battle = "–Ω–∞ –≤–∞—Å –Ω–∞–ø–∞–ª " + str(type_monster_battle) + "\n"
        fight_battle_monster(fight_logs_battle, type_monster_battle, message)


# –ö–∞—Ä—Ç–∏–Ω–∫–∞ –∫–∞—Ä—Ç—ã –º–∏—Ä–∞
@bot.message_handler(commands=['map'])
def karta(message):
    bot.send_photo(message.from_user.id, photo=open('Map.jpg', 'rb'))


G = Get_text(massege)

bot.polling()
