import telebot
import requests
import urllib.request
import sqlite3


# –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
users = sqlite3.connect("users.db")
with users:
    cur = users.cursor()
    cur.execute("DROP TABLE IF EXISTS Users")
    cur.execute("CREATE TABLE Users(Id INT, UserName TEXT, Strength INT, intellect INT, Agility INT, "
                "Stamina INT, Luck INT, Gold INT, LVL INT, LVL_OP INT, LVL_NEED_OP INT)")
cur.close()

# git add .
# git commit -m "first commit"
# git push -u origin master

bot = telebot.TeleBot('952476420:AAHOxzyLhPslDRyRMaxGY2YTZN-ZlGrpwIU')


def hello(message):
    users = sqlite3.connect("users.db")
    name = message.from_user.first_name
    with users:
        cur = users.cursor()
        cur.execute("""INSERT INTO Users VALUES(?,?,?,?,?,?,?,?,?,?,?);""",
                    (str(message.from_user.id), str(name), str('5'), str('5'), str('5'), str('5'), str('5'),
                     str('1000'), str('1'), str('0'), str('100')))
    cur.close()


@bot.message_handler(commands=['start'])
def start_message(message):
    start = telebot.types.ReplyKeyboardMarkup(True, False)
    itembtna = telebot.types.KeyboardButton('–ë–æ–π ‚öî')
    itembtnb = telebot.types.KeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å üé´')
    itembtnc = telebot.types.KeyboardButton('–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å üéí')
    itembtnd = telebot.types.KeyboardButton('–í –≥–∏–ª—å–¥–∏—é üè∞')
    itembtne = telebot.types.KeyboardButton('–ü—Ä–æ–∫–∞—á–∞—Ç—å üèÖ')
    start.row(itembtna, itembtnb)
    start.row(itembtnc, itembtnd, itembtne)
    bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=start)
    users = sqlite3.connect("users.db")
    with users:
        cur = users.cursor()
        cur.execute("SELECT * FROM Users WHERE Id=" + str(message.from_user.id))
        rows = cur.fetchall()
    cur.close()
    if rows == []:
        bot.callback_query_handler(hello(message))


def users_list(message):
    users = sqlite3.connect("users.db")
    with users:
        cur = users.cursor()
        cur.execute("SELECT * FROM Users")
        rows = cur.fetchall()
        for row in rows:
            bot.send_message(message.from_user.id, str(row))


def users_window(message):
    users = sqlite3.connect("users.db")
    with users:
        cur = users.cursor()
        cur.execute("SELECT * FROM Users WHERE Id=" + str(message.from_user.id))
        rows = cur.fetchall()
        cur.close()
    if rows == []:
        bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, –≤–∏–∂—É —Ç—ã –∑–¥–µ—Å—å –≤–ø–µ—Ä–≤—ã–µ, –Ω–∞–∂–º–∏ /start")
    else:
        bot.send_message(message.from_user.id, "–ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞: " + str(rows[0][1]) + "\n" \
                                                "–£—Ä–æ–≤–µ–Ω—å: " + str(rows[0][8]) + "   "\
                                                + str(rows[0][9]) + "/" + str(rows[0][10]) + "\n\n" \
                                                "üí™ –°–∏–ª–∞: " + str(rows[0][2]) + "\n" \
                                                "üìö –ò–Ω—Ç–µ–ª–µ–∫—Ç: " + str(rows[0][3]) + "\n" \
                                                "ü§∏ ‚Äç–õ–æ–≤–∫–æ—Å—Ç—å: " + str(rows[0][4]) + "\n" \
                                                "üßò ‚Äç–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: " + str(rows[0][5]) + "\n" \
                                                "üéØ –£–¥–∞—á–∞: " + str(rows[0][6]) + "\n\n" \
                                                "üí∞ –ó–æ–ª–æ—Ç–æ: " + str(rows[0][7]))


def users_up_stats(message):
    users = sqlite3.connect("users.db")
    with users:
        cur = users.cursor()
        cur.execute("SELECT * FROM Users WHERE Id=" + str(message.from_user.id))
        rows = cur.fetchall()
        cur.close()
    if rows == []:
        bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, –≤–∏–∂—É —Ç—ã –∑–¥–µ—Å—å –≤–ø–µ—Ä–≤—ã–µ, –Ω–∞–∂–º–∏ /start")
    else:
        up_stats = telebot.types.ReplyKeyboardMarkup(True, False)
        itembtna = telebot.types.KeyboardButton('üí™ –°–∏–ª–∞')
        itembtnb = telebot.types.KeyboardButton('üìö –ò–Ω—Ç–µ–ª–µ–∫—Ç')
        itembtnc = telebot.types.KeyboardButton('ü§∏ ‚Äç–õ–æ–≤–∫–æ—Å—Ç—å')
        itembtnd = telebot.types.KeyboardButton('üßò ‚Äç–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å')
        itembtne = telebot.types.KeyboardButton('üéØ –£–¥–∞—á–∞')
        itembtnf = telebot.types.KeyboardButton('–ù–∞–∑–∞–¥')
        up_stats.row(itembtna, itembtnb, itembtnc)
        up_stats.row(itembtnd, itembtne, itembtnf)
        bot.send_message(message.from_user.id, "–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–∫–∞—á–∫–∏: " + str(100 * rows[0][8]) + "üí∞")
        bot.send_message(message.from_user.id, "–ß—Ç–æ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–æ–∫–∞—á–∞—Ç—å " + str(rows[0][1]) + "?\n",
                         reply_markup=up_stats)


def rearwards(message):
    rearw = telebot.types.ReplyKeyboardMarkup(True, False)
    itembtna = telebot.types.KeyboardButton('–ë–æ–π ‚öî')
    itembtnb = telebot.types.KeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å üé´')
    itembtnc = telebot.types.KeyboardButton('–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å üéí')
    itembtnd = telebot.types.KeyboardButton('–í –≥–∏–ª—å–¥–∏—é üè∞')
    itembtne = telebot.types.KeyboardButton('–ü—Ä–æ–∫–∞—á–∞—Ç—å üèÖ')
    rearw.row(itembtna, itembtnb)
    rearw.row(itembtnc, itembtnd, itembtne)
    bot.send_message(message.from_user.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é", reply_markup=rearw)


def users_up_stats_inc(message):
    users = sqlite3.connect("users.db")
    with users:
        cur = users.cursor()
        cur.execute("SELECT * FROM Users WHERE Id=" + str(message.from_user.id))
        rows = cur.fetchall()
        price_stats_inc = 100 * rows[0][8]
        if rows[0][7] >= price_stats_inc:
            if message.text == "üí™ –°–∏–ª–∞" or message.text == "–°–∏–ª–∞":
                type_stat = "Strength"
            elif message.text == "üìö –ò–Ω—Ç–µ–ª–µ–∫—Ç" or message.text == "–ò–Ω—Ç–µ–ª–µ–∫—Ç":
                type_stat = "intellect"
            elif message.text == "ü§∏ ‚Äç–õ–æ–≤–∫–æ—Å—Ç—å" or message.text == "‚Äç–õ–æ–≤–∫–æ—Å—Ç—å":
                type_stat = "Agility"
            elif message.text == "üßò ‚Äç–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å" or message.text == "‚Äç–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å":
                type_stat = "Stamina"
            elif message.text == "üéØ –£–¥–∞—á–∞" or message.text == "–£–¥–∞—á–∞":
                type_stat = "Luck"
            cur.execute("UPDATE Users SET " + type_stat + "=" + type_stat + "+1 WHERE  Id=" + str(message.from_user.id))
            cur.execute("UPDATE Users SET Gold = Gold-" + str(price_stats_inc) + " WHERE  Id=" + str(message.from_user.id))
            bot.send_message(message.from_user.id, "–í—ã–±—Ä–∞–Ω–Ω–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –ø–æ–≤—ã—Å–∏–ª–∞—Å—å")
            bot.callback_query_handler(rearwards(message))
        else:
            bot.send_message(message.from_user.id, "–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ –¥–ª—è –ø—Ä–æ–∫–∞—á–∫–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏")
            bot.callback_query_handler(rearwards(message))
    cur.close()


def battle(message):
    users = sqlite3.connect("users.db")
    with users:
        cur = users.cursor()
        cur.execute("SELECT * FROM Users WHERE Id=" + str(message.from_user.id))
        rows = cur.fetchall()
        cur.close()
    if not rows:
        bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, –≤–∏–∂—É —Ç—ã –∑–¥–µ—Å—å –≤–ø–µ—Ä–≤—ã–µ, –Ω–∞–∂–º–∏ /start")
    else:
        bot.send_message(message.from_user.id, "–Ω–∞ –≤–∞—Å –Ω–∞–ø–∞–ª")


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == "–ü—Ä–∏–≤–µ—Ç" or message.text == "–ø—Ä–∏–≤–µ—Ç":
        users = sqlite3.connect("users.db")
        with users:
            cur = users.cursor()
            cur.execute("SELECT * FROM Users WHERE Id=" + str(message.from_user.id))
            rows = cur.fetchall()
        cur.close()
        if rows == []:
            bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, –≤–∏–∂—É —Ç—ã –∑–¥–µ—Å—å –≤–ø–µ—Ä–≤—ã–µ, –Ω–∞–∂–º–∏ /start")
        else:
            bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, " + str(rows[0][1]) + ", —á–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?")
    elif message.text == "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏" or message.text == "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏":
        bot.callback_query_handler(users_list(message))
    elif message.text == "–ü—Ä–æ—Ñ–∏–ª—å" or message.text == "–ø—Ä–æ—Ñ–∏–ª—å" or message.text == "–ü—Ä–æ—Ñ–∏–ª—å üé´":
        bot.callback_query_handler(users_window(message))
    elif message.text == "–ü—Ä–æ–∫–∞—á–∞—Ç—å üèÖ" or message.text == "–ü—Ä–æ–∫–∞—á–∞—Ç—å" or message.text == "–ø—Ä–æ–∫–∞—á–∞—Ç—å":
        bot.callback_query_handler(users_up_stats(message))
    elif message.text == "–ù–∞–∑–∞–¥" or message.text == "–Ω–∞–∑–∞–¥":
        bot.callback_query_handler(rearwards(message))
    elif message.text == "üí™ –°–∏–ª–∞" or message.text == "–°–∏–ª–∞":
        bot.callback_query_handler(users_up_stats_inc(message))
    elif message.text == "üìö –ò–Ω—Ç–µ–ª–µ–∫—Ç" or message.text == "–ò–Ω—Ç–µ–ª–µ–∫—Ç":
        bot.callback_query_handler(users_up_stats_inc(message))
    elif message.text == "ü§∏ ‚Äç–õ–æ–≤–∫–æ—Å—Ç—å" or message.text == "‚Äç–õ–æ–≤–∫–æ—Å—Ç—å":
        bot.callback_query_handler(users_up_stats_inc(message))
    elif message.text == "üßò ‚Äç–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å" or message.text == "‚Äç–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å":
        bot.callback_query_handler(users_up_stats_inc(message))
    elif message.text == "üéØ –£–¥–∞—á–∞" or message.text == "–£–¥–∞—á–∞":
        bot.callback_query_handler(users_up_stats_inc(message))
    elif message.text == "–ë–æ–π ‚öî" or message.text == "–ë–æ–π":
        bot.callback_query_handler(battle(message))


bot.polling()
